Project: Predict Customer churn on a dataset.
PREPROCESSING DATA:
	1. DATA INTEGRATION:
		a. Kết hợp hai dataset lại thành một data set lớn hơn:
			a.1. Phát hiện vấn đề nhận dạng thực thể: Phần này thường là dò bằng tay hoặc bán thủ công. (đã tìm được cách bán thử công nhưng chưa code kịp).
			a.2. Phát hiện record trùng lặp (code rồi phần này).
			a.3. Phát hiện vấn đề bị sai về số chiều của các data set với nhau: (chưa sửa được phần này)
			a.4. Thống nhất giữa hai data set về số chiều: (chưa sữa được phần này).
		b. Tương quan thuộc tính: Khó, đang tìm hiểu.
	2. CLEANING DATA:
		a. All methods of handling missing data:
			a.1. Continuious data:
				+ Remove the missing records: code xong
				+ mean-methods: code xong
				+ median-methods: code xong
				+ mode-methods: code xong
			a.2. Categorical data:
				+ fixed value: code xong
				+ mode-methods: code xong
		b. Normalization Data:
			b.1. max-min [0,1]: code xong
			b.2. z-scores (theo phân phối chuẩn): code xong
		c. outlier detection:
			c.1. Bằng z-scores: Code xong
			c.2. bằng DSCAN: Code xong
	3. PHẦN TRỰC QUAN HÓA DỮ LIỆU:
		a. Các loại biểu đồ:
			a.1. Biểu đồ dạng điểm giữa hai cột (points):
			a.2. Biểu đồ dạng đường giữa hai cột (line):
			a.3. Biểu đồ dạng miền giữa hai cột (area):
			a.4. Biểu đồ dạng histogram giữa hai cột (hist plot):
			a.5. Biểu đồ dạng cột nhóm giữa hai cột (bar plot):
			a.6. Biểu đồ dạng quạt giữa trên hai cột (pie plot):
			a.7. BIểu đồ dạng quạt nhưng tạo ra nhiều biểu biểu đồ theo bước nhảy của biến liên tục (biến có dạng như year, month, tenure, season, ...)
			a.8. Biểu đồ dạng hộp (box plot)
			a.9. Biểu đồ dạng nhiều hộp biểu diễn theo từng giá trị trong tập giá trị của cột đó.
			a.10. Biểu đồ dạng histogram và kèm theo hàm mật độ xác suất.
			a.11. Biểu đồ dạng histogram dạng cột chồng các trạng thái trong cùng một cột.
			a.12. Biểu đồ dạng quạt nhưng rổng ruột cho một cặp biến.
			a.13. Biểu đồ dạng quạt nhưng một cặp biến nhưng lại là một dãy các biểu đồ quạt theo unique trên một cột.
			a.14. Biểu đồ 3D dạng điểm biểu diễn ba thuộc tính liên tục.
			a.15. Biểu đồ 3D dạng điểm nhưng có phân chia theo nhãn đã gán sẵn theo bên ngoài.
			a.16. Biều đồ dạng điểm dạng có gán nhãn và thể hiện độ rộng theo bán kính của từng điểm theo một thuộc tính nào đó. (Biểu đồ dạng bong bóng)
			a.17. Biểu đồ thể hiện tất cả các biểu đồ con của một thuộc tính theo thời gian (hay một cột có tính chất tương tự như vậy) để thể hiện mối quan hệ của thời điểm trước và thời điểm sau.
			a.18. Biểu đồ dạng đường biểu diễn trong không gian 3D.
			
	4. PHẦN RỜI RẠC HÓA DỮ LIỆU LIÊN TỤC:
		a. Rời rạc hóa bằng cây quyết định giữa một cột cần chuyển dựa trên cột đã gắn nhãn: code xong.
		b. Rời rạc hóa bằng cây quyết định trên cả tập dữ liệu: code xong
		c. Rời rạc bằng phương pháp "Rừng ngẫu nhiên": code xong
		d. Rời rạc hóa bằng phương pháp chia giõ theo sắp xếp rồi cắt theo tỷ lệ cho trước: code xong
		e. Rời rạc hóa bằng chia giõ dựa theo độ rộng của dữ liệu: code xong
		f. Rời rạc hóa bằng k-mean: đang xong
		
	5. PHẦN CHIA DỮ LIỆU TRƯỚC VÀ SAU KHI HUẤN LUYỆN:
		a. Chia trước khi tiền xử lý:
		b. Xử lý độc lập trên các tập khác nhau trên cùng các bước xử lý dữ liệu.

	6. GIẢM CHIỀU DỮ LIỆU:
		a. Feature selection:
			a.1. Missing value ratio: Đã code xong
			a.2. Low Variance filter: Đã code xong
			a.3. High Correlation filter: Đã code xong
			a.4. Backward Feature Elimination: Đã code xong
			a.5. Forward Feature Selection: Đã code xong
			a.6. Random Forest: Đã code xong.
			a.7. Factor analysis: Đã code xong
				
		b. Dim reduction:
			b.1. Principle Feature Analysis: Đã code xong theo hàm dựng sẵn. Và tìm hiểu lý thuyết về nó.
				+ Cơ sở toán học: Chuẩn của một vector, chuẩn của một ma trận
				+ Xây dựng hàm mục tiêu:
				+ Phân tích hàm mục tiêu:
				+ Phân tích hàm tiêu để suy ra hàm mất mác:
				+ Tối ưu hàm mất mác.
				+ Tìm nghiệm của bài toán.
				+ Hiểu các bước thực hiện theo quy trình của bài toán.
				+ Code đề mô bằng hàm dựng sẵn của sklearn.
			b.2 Independent Feature Analysis: đã code xong.
PHẦN NEURAL NETWORK:
	1. Mô hình 1 tầng ẩn đơn giản nhất:
		Code chia thành 3 class:	Neuron: chứa tế bào hoặc mỗi đơn vị
						NeuronLayer: khai báo tầng của mạng.
						Neural network: Khai báo mạng nẻual
 		Hàm kích hoạt: tanh
		Hàm độ lỗi: mean_square_error
		Lan truyền tiến
	2. Mo hinh nhiều hơn một tầng ẩn:
Mô hình em cài đặt như thế này:
Class Network là class neural net: đã cài đặt bằng thư viện numpy xong.
	gồm các thuộc tính:
		+ L: int --> số tầng
		+ input_layer: InputLayer --> tầng input kiểu InputLayer.
		+ hidden_layers: HiddenLayer --> mảng các tầng hidden kiểu HiddenLayer.
		+ output_layer: OutputLayer --> tầng output kiểu OutputLayer.
	Phương thức:
		+ def __init__(self, num_of_hidden_layers, array_num_of_unit_each_layer, Ws, bs)
		+ def feed_forward(X)
		+ train:

Class Layer: abstract class:
	InputLayer, OUputLayer, HiddenLayer inherit Layer
Class Connection: chứa W và b
PHẦN CONVOLUTIONAL NERUAL NET:
	Tìm hiểu được khái niệm:
		convolutional là gì:
		slibling windows:
		Hạn chế: tuy nhiên chưa biết cách cài đặt một mô hình đơn giản.
	Bắt đầu tìm hiểu chi tiết mô hình thông qua khóa học CS231 của standford.
		Bài 1: giới thiệu tổng quan:
		Bài 2: nói về phân lớp trên ảnh biểu diễn thuật toán KNN trong phân lớp ảnh, SVM trong phân lớp ảnh.
		Bài 3: nói về hàm mất mác và regularization tối ưu hàm mất mác để fit được tập kiểm tra.
	Mô hình CNNs:
		Hiểu được cách hình thành từ ANNs sang CNNs. Code được nhưng em chưa code kịp.
		Hiểu được tầng chập, công thức tính toán từng phần tử trong ma trận trọng số: Đã code được phần conv và pooling đơn giản thông qua numpy (Nhưng anh cho phép em tổng hợp lại code sau khi em hoàn thành hơn 50%)
		Hiểu được quy trình tính toán.
		Code được phần đổi từ 3 kênh màu sang xám, tìm phần từ đại diện trong một nhóm điểm ảnh.
PHẦN DEEP LEARNING:
	1. Học tensorflow:
		a. 
	